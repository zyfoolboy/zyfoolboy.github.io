<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zyfoolboy</title>
  <subtitle>宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zyfoolboy.github.io/"/>
  <updated>2016-10-06T02:07:44.000Z</updated>
  <id>https://zyfoolboy.github.io/</id>
  
  <author>
    <name>zyfoolboy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自酿酸奶</title>
    <link href="https://zyfoolboy.github.io/2016/10/06/%E8%87%AA%E9%85%BF%E9%85%B8%E5%A5%B6/"/>
    <id>https://zyfoolboy.github.io/2016/10/06/自酿酸奶/</id>
    <published>2016-10-06T02:07:02.000Z</published>
    <updated>2016-10-06T02:07:44.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="生活" scheme="https://zyfoolboy.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="美食" scheme="https://zyfoolboy.github.io/tags/%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>TableView 常用方法小结</title>
    <link href="https://zyfoolboy.github.io/2016/10/02/TableView-%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E5%B0%8F%E7%BB%93/"/>
    <id>https://zyfoolboy.github.io/2016/10/02/TableView-常用方法小结/</id>
    <published>2016-10-02T05:59:40.000Z</published>
    <updated>2016-10-05T14:37:41.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-设置cell选择状态的界面"><a href="#1-设置cell选择状态的界面" class="headerlink" title="1.设置cell选择状态的界面"></a>1.设置cell选择状态的界面</h3><p>在tableview的delegate方法</p>
<p><code>- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath</code></p>
<p>里面写改变选中状态cell的界面<br><a id="more"></a><br>在tableview的delegate方法</p>
<p><code>- (void)tableView:(UITableView *)tableView didDeselectRowAtIndexPath:(NSIndexPath *)indexPath</code></p>
<p>里面改变为非选中状态cell的界面</p>
<hr>
<h3 id="2-设置tableview默认选中某一行"><a href="#2-设置tableview默认选中某一行" class="headerlink" title="2.设置tableview默认选中某一行"></a>2.设置tableview默认选中某一行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[self.tableView selectRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0] animated:YES scrollPosition:UITableViewScrollPositionNone];</div><div class="line">[self tableView:self.tableView didSelectRowAtIndexPath:[NSIndexPath indexPathForItem:0 inSection:0]];</div></pre></td></tr></table></figure>
<p>第一行代码使tableView的第一行的选中背景显示出来但是没有1中的第一句代码的效果(第二句代码可以加上这种效果)</p>
<hr>
<h3 id="3-设置cell的分割线左边顶到tableview最左边"><a href="#3-设置cell的分割线左边顶到tableview最左边" class="headerlink" title="3.设置cell的分割线左边顶到tableview最左边"></a>3.设置cell的分割线左边顶到tableview最左边</h3><p>初始化tableview的时候先写上这些代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">if ([_leftTableView respondsToSelector:@selector(setSeparatorInset:)]) &#123;</div><div class="line">            [_leftTableView setSeparatorInset:UIEdgeInsetsZero];</div><div class="line">        &#125;</div><div class="line">if ([_leftTableView respondsToSelector:@selector(setLayoutMargins:)]) &#123;</div><div class="line">            [_leftTableView setLayoutMargins:UIEdgeInsetsZero];</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>然后再在tableView的delegate方法中这样写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath &#123;</div><div class="line">    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) &#123;</div><div class="line">        [cell setSeparatorInset:UIEdgeInsetsZero];</div><div class="line">    &#125;</div><div class="line">    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) &#123;</div><div class="line">        [cell setLayoutMargins:UIEdgeInsetsZero];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="4-取消-cell-的选中状态背景色"><a href="#4-取消-cell-的选中状态背景色" class="headerlink" title="4.取消 cell 的选中状态背景色"></a>4.取消 cell 的选中状态背景色</h3><p>在初始化 cell 后设置 <code>cell.selectionStyle = UITableViewCellSelectionStyleNone;</code> 选中状态就没颜色了。</p>
<hr>
<h3 id="5-Grouped-样式的-TableView-的-SectionHeader-和-SectionFodder-高度"><a href="#5-Grouped-样式的-TableView-的-SectionHeader-和-SectionFodder-高度" class="headerlink" title="5.Grouped 样式的 TableView 的 SectionHeader 和 SectionFodder 高度"></a>5.Grouped 样式的 TableView 的 SectionHeader 和 SectionFodder 高度</h3><p>Grouped 样式的 TableView 的 SectionHeader 和 SectionFodder 高度默认都是20，如果不想要这个高度，在 TableView 的代理方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section</div><div class="line">- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section</div></pre></td></tr></table></figure></p>
<p>中返回0是没用的，还是会有默认高度，应该返回一个很小的值，比如0.001。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-设置cell选择状态的界面&quot;&gt;&lt;a href=&quot;#1-设置cell选择状态的界面&quot; class=&quot;headerlink&quot; title=&quot;1.设置cell选择状态的界面&quot;&gt;&lt;/a&gt;1.设置cell选择状态的界面&lt;/h3&gt;&lt;p&gt;在tableview的delegate方法&lt;/p&gt;
&lt;p&gt;&lt;code&gt;- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;里面写改变选中状态cell的界面&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zyfoolboy.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="iOS" scheme="https://zyfoolboy.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS 加载本地 HTML 文件 CSS 样式图片无效果</title>
    <link href="https://zyfoolboy.github.io/2016/09/30/iOS-%E5%8A%A0%E8%BD%BD%E6%9C%AC%E5%9C%B0-HTML-%E6%96%87%E4%BB%B6-CSS-%E6%A0%B7%E5%BC%8F%E5%9B%BE%E7%89%87%E6%97%A0%E6%95%88%E6%9E%9C/"/>
    <id>https://zyfoolboy.github.io/2016/09/30/iOS-加载本地-HTML-文件-CSS-样式图片无效果/</id>
    <published>2016-09-30T14:27:49.000Z</published>
    <updated>2016-10-05T14:37:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>在开发的过程中，有时候需要加载一些 HTML 页面，对于不太复杂的界面，基本上都可以放到本地用 UIWebview 来加载，但是在开发过程中会碰到 UIWebview 加载出来的 HTML 页面没有图片和 CSS 样式<br><a id="more"></a></p>
<p>加载出来的效果如下图：</p>
<p></p><p align="center"><img width="300" src="http://upload-images.jianshu.io/upload_images/1324353-0deab505df8b71e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><br>出现这种问题一般是资源路径读取的问题，我们把包含 HTML 文件的文件夹拖入工程的时候一般情况下是这样的：<br><img src="http://upload-images.jianshu.io/upload_images/1324353-bfe0baa5e41ab006.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>一般情况下我们的 Added folders 选项都是选的 Create Groups 选项，工程中被加入的文件夹是黄颜色的<p></p>
<p></p><p align="center"><img width="300" src="http://upload-images.jianshu.io/upload_images/1324353-eb777097a34071a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><br>问题就出在这个 Create Groups 上面，以这种方式加入工程的文件夹，文件夹下的文件在iOS沙盒中全都被保存在一个 mainBundle 根路径下，即不管加入项目的文件的目录结构如何，在 APP 中都可以通过 mainBundlePath/filename 来访问到，而原来的目录结构则不存在了。而 HTML 中的图片和 CSS 文件的引用方式写的则是绝对路径。因此 HTML 中的路径就不对，需要把引用文件的代码如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">href=&quot;css/min/home.min.css&quot;</div><div class="line">src=&quot;images/qq.gif&quot;</div></pre></td></tr></table></figure><p></p>
<p>全部替换为这种样式，不用写路径了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">href=&quot;min.css&quot;</div><div class="line">src=&quot;qq.gif&quot;</div></pre></td></tr></table></figure></p>
<p>代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">NSString *path = [[NSBundle mainBundle] pathForResource:@&quot;index&quot; ofType:@&quot;html&quot;];</div><div class="line">NSString *htmlString = [NSString stringWithContentsOfFile:path encoding:NSUTF8StringEncoding error:nil];</div><div class="line">NSString *basePath = [[NSBundle mainBundle] bundlePath];</div><div class="line">NSURL *baseURL = [NSURL fileURLWithPath:basePath];</div><div class="line">[self.webView loadHTMLString:htmlString baseURL:baseURL]；</div></pre></td></tr></table></figure>
<p>这样工作量是很大的，还有一种办法就是在选择 Added folders 选项时选择 Create folder references<br><img src="http://upload-images.jianshu.io/upload_images/1324353-0e47cb2a98580be0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>这时加入工程的文件夹是蓝颜色的</p>
<p></p><p align="center"><img width="300" src="http://upload-images.jianshu.io/upload_images/1324353-41993fc582f62f69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><br>这样，就可以正确的加载出我们想要的效果了<p></p>
<p></p><p align="center"><img width="300" src="http://upload-images.jianshu.io/upload_images/1324353-845729a795102766.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><br>代码如下：<p></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">UIWebView *webView = [[UIWebView alloc] initWithFrame:self.view.bounds];</div><div class="line">webView.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;</div><div class="line">webView.scrollView.bounces = NO;</div><div class="line">webView.delegate = self;</div><div class="line">[webView loadRequest:[NSURLRequest requestWithURL:[NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@&quot;movie-item&quot; ofType:@&quot;html&quot; inDirectory:@&quot;web/movie&quot;]]]];</div><div class="line">[self.view addSubview:webView];</div></pre></td></tr></table></figure>
<p>这时需要注意 HTML 文件路径要写正确。<br><a href="https://github.com/zyfoolboy/problems-of-work/wiki/iOS%E5%8A%A0%E8%BD%BD%E6%9C%AC%E5%9C%B0HTML%E6%96%87%E4%BB%B6CSS%E6%A0%B7%E5%BC%8F%E5%9B%BE%E7%89%87%E6%97%A0%E6%95%88%E6%9E%9C" target="_blank" rel="external">github</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在开发的过程中，有时候需要加载一些 HTML 页面，对于不太复杂的界面，基本上都可以放到本地用 UIWebview 来加载，但是在开发过程中会碰到 UIWebview 加载出来的 HTML 页面没有图片和 CSS 样式&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zyfoolboy.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="iOS" scheme="https://zyfoolboy.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>在 iOS 中使用 MQTT 协议</title>
    <link href="https://zyfoolboy.github.io/2016/09/29/test/"/>
    <id>https://zyfoolboy.github.io/2016/09/29/test/</id>
    <published>2016-09-29T14:10:58.000Z</published>
    <updated>2016-10-05T14:37:56.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>有关 MQTT 协议的概念这里不做过多描述，网上有大把的文章。本文主要讨论 MQTT 协议在 iOS 中的应用。</p>
</blockquote>
<p>想完整的使用 MQTT 协议需要搭建一个服务器和完成 iOS 客户端代码。<br><a id="more"></a></p>
<h2 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h2><p>本次使用 <a href="https://github.com/emqtt/emqttd" target="_blank" rel="external">emqttd</a> 作为服务器，EMQ 文档<a href="http://emqtt.com/docs/v2/index.html" target="_blank" rel="external">地址</a>，服务器搭建可以在该文档中查看。配置完成之后，在浏览器输入<a href="http://127.0.0.1:18083" target="_blank" rel="external">http://127.0.0.1:18083</a> 用户名密码默认为 admin/public 界面如图：<br><img src="http://upload-images.jianshu.io/upload_images/1324353-b18860715d31a5eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="server.png"><br>至此，服务器已经搭建完成，可以开始 iOS 代码了。</p>
<h2 id="iOS-代码"><a href="#iOS-代码" class="headerlink" title="iOS 代码"></a>iOS 代码</h2><p>在 iOS 客户端可以使用<a href="https://github.com/ckrey/MQTT-Client-Framework" target="_blank" rel="external">MQTTClient</a>库，支持 CocoaPod 导入。导入框架之后，第一步先初始化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">MQTTCFSocketTransport *transport = [[MQTTCFSocketTransport alloc] init];</div><div class="line">transport.host = @&quot;192.168.1.117&quot;;//MQTT服务器的地址,自己电脑的IP地址</div><div class="line">transport.port = 1883;//设置MQTT服务器的端口</div><div class="line">self.mySession = [[MQTTSession alloc] init];//初始化MQTTSession对象</div><div class="line">self.mySession.transport = transport;//给mySession对象设置基本信息</div><div class="line">self.mySession.delegate = self;//设置mySession的代理</div><div class="line">self.mySession.userName = @&quot;user2&quot;;</div><div class="line">self.mySession.password = @&quot;passwd2&quot;;</div><div class="line">[self.mySession connectAndWaitTimeout:30];//开始连接服务器，返回值为YES则说明连接成功</div></pre></td></tr></table></figure></p>
<p>这里连接方式是使用用户名和密码连接，还可以使用 clientID，具体可以看之前说的文档。</p>
<p>第二步开始订阅主题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[self.mySession subscribeToTopic:@&quot;/World&quot; atLevel:MQTTQosLevelAtLeastOnce subscribeHandler:^(NSError *error, NSArray&lt;NSNumber *&gt; *gQoss) &#123;</div><div class="line">                if (error) &#123;</div><div class="line">                    NSLog(@&quot;订阅失败 = %@&quot;, error.localizedDescription);</div><div class="line">                &#125;else&#123;</div><div class="line">                    NSLog(@&quot;订阅成功 = %@&quot;, gQoss);</div><div class="line">                &#125;</div><div class="line">            &#125;];</div></pre></td></tr></table></figure></p>
<p>订阅成功之后，打开浏览器控制台，<br><img src="http://upload-images.jianshu.io/upload_images/1324353-95acf30dc9bad608.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="topic.png"><br>如图可以发现 Topics 中多了一个 /World,之后就可以向该主题发送消息了。</p>
<p>第三步向主题接收发送消息</p>
<p>接收消息只需要遵循 MQTTSession 的代理方法。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//接收消息</div><div class="line">- (void)newMessage:(MQTTSession *)session data:(NSData *)data onTopic:(NSString *)topic qos:(MQTTQosLevel)qos retained:(BOOL)retained mid:(unsigned int)mid &#123;</div><div class="line">    </div><div class="line">    NSLog(@&quot;log&quot;);</div><div class="line">    NSString *str = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];</div><div class="line">    self.messageLabel.text = str;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>发送消息只需要设置目标 Topic 发送内容等</p>
<pre><code>NSData *data = [self.messageText.text dataUsingEncoding:NSUTF8StringEncoding];

[self.mySession publishAndWaitData:data
                onTopic:@&quot;topic&quot;
                retain:NO
                qos:MQTTQosLevelAtLeastOnce];
</code></pre><p>代码完成，可以测试一下，分别用真机和模拟器来测试收发消息。</p>
<table>
<thead>
<tr>
<th></th>
<th>订阅 Topic</th>
<th>发送 Topic</th>
</tr>
</thead>
<tbody>
<tr>
<td>真机</td>
<td>Simulators</td>
<td>Device</td>
</tr>
<tr>
<td>模拟器</td>
<td>Device</td>
<td>Simulators</td>
</tr>
</tbody>
</table>
<p>真机订阅 Simulators Topic 向 Device Topic 发送消息<br>效果如下：</p>
<p align="center"><img width="300" src="http://upload-images.jianshu.io/upload_images/1324353-c0ad2d5a13d611e9.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"> <img width="300" src="http://upload-images.jianshu.io/upload_images/1324353-8426c689db0409b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>

<p>模拟器订阅 Device Topic 向Simulators Topic 发送消息<br>效果如下：</p>
<p align="center"><img width="300" src="http://upload-images.jianshu.io/upload_images/1324353-ce5b0ee29e329a36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"> <img width="300" src="http://upload-images.jianshu.io/upload_images/1324353-2b41ac5d09d005c4.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p>

<p>一个基于 MQTT 协议的简单的即时通讯功能已经完成。 Demo <a href="https://github.com/zyfoolboy/MQTTDemo" target="_blank" rel="external">地址</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;有关 MQTT 协议的概念这里不做过多描述，网上有大把的文章。本文主要讨论 MQTT 协议在 iOS 中的应用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;想完整的使用 MQTT 协议需要搭建一个服务器和完成 iOS 客户端代码。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zyfoolboy.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="iOS" scheme="https://zyfoolboy.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zyfoolboy.github.io/2016/09/29/hello-world/"/>
    <id>https://zyfoolboy.github.io/2016/09/29/hello-world/</id>
    <published>2016-09-29T13:57:27.000Z</published>
    <updated>2016-10-05T14:40:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="https://zyfoolboy.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="博客" scheme="https://zyfoolboy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
